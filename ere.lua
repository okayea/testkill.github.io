--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=117,88,67,57,45,23,97,27,15,80,74,33,11,41,28,30,96,91,92,42,29,59,99,68,53,11,21,82,69,77,91,46,77,36,44,16,69,63,47,48,34,25,63,37,19,24,83,63,17,24,13,10,19 while bh~=76 do if bi>=757 then if bi<=1021 then if bi>=896 then if bi<=965 then if bi>=919 then if bi>921 then do ck=function(cw,cx,cy,cz,cz)local cz do cz=((cw/2^(cx-1))%2^((cy-1)-(cx-1)+1))end do return(cz-cz%1);end end end bi=985 else bi=965 bu=(bit_lib and bit_lib.bxor or function(cw,cx)cw=cw%(2^32)cx=cx%(2^32)local cy,cz=0,1 while cw>0 and cx>0 do local da,db=cw%16,cx%16 cy=cy+ci[da+1][db+1]*cz cw=(cw-da)/16 cx=(cx-db)/16 cz=cz*16 end cy=cy+cw*cz+cx*cz return cy end)end else bi=919 bp=function(cw,cx,cy,cz,cz,cz)local cz,da,db=69,56,64,55,74,13,72,38,89,52,91,79,34 while cz~=30 do if da>=139 then if da>=159 then if da<182 then da=186 return db else cz=30;end else da=159 db=(db-db%1)end else if da>=86 then if da>94 then da=139 db=((cx/cq[cw])%cq[cy])else db=nil da=114 end else da=86 db=nil end end end end end else if bi<=985 then bi=1001 bs=1 else if bi>1004 then cu=function()local cw cw=cm(cc,bs,bs)bs=(bs+1);return cw;end bi=1051 else br=function()local cw,cx,cy,cz do cw,cz,cy,cx=cm(cc,bs,(bs+3))end bs=(bs+4);do return((cx*16777216)+(cy*65536)+(cz*256)+cw);end end bi=1021 end end end else if bi>=815 then if bi>=844 then if bi>850 then for cw=1,31 do cq[cw]=bz bz=(bz*2)end bi=896 else bz=2 bi=861 end else bi=844 cq={[0]=1}end else if bi>759 then do cp=(2^52)end bi=815 else bi=800 bo=''end end end else if bi>=1229 then if bi>=1324 then if bi<=1324 then bi=1373 cl=function(cw,cx,cy,cz,cz)local cz,da,db,dc,dd db=cw[180]da=cf dc=cw[151]do cz=cw[39]end dd=cw[18]return function(...)local cw,da,de,df,dg,dh,di,dj,dk do dk=1 end do cw=-1 end dg=-1 do dj={}end di={...}do de=(bv('#',...)-1)end dh={}da={}for dg=0,de do if(not(dg<dc))then dj[(dg-dc)]=di[(dg+1)];else da[dg]=di[(dg+1)];end;end;df=(de-dc+1)while j do local j,dc,de,df,dg,di,dj,dl,dm,dn do dn=dd[dk]end j=dn[130]de=dn[42]df=dn[38]dl=dn[169]di=dn[154]do dj=dn[172]end dc=dn[141]dm=dn[30]do dg=dn[133]end if not(j<31)then if not(j>46)then if not(j<39)then if not(j<43)then do if not(dn[130]>44)then if(dn[b]>43)then local b,dc,dd do dc=db[dn[q]]end b=nil dd={}b=cj({},{__index=function(q,q)local q=dd[q];return q[1][q[2]];end,__newindex=function(q,q,de)local q=dd[q]q[1][q[2]]=de;end;});do for q=1,di do local de de=dn[ba][q]do if de[1]then dd[(q-1)]={da,de[2],nil,nil};else do dd[(q-1)]={cx,de[2],nil,nil};end end;end do dh[(#dh+1)]=dd;end end;end da[df]=cl(dc,b,cy);else dk=dm;end else if(j<46)then da[dn[38]]=da[dm];else da[df]=-da[dm];end end end else do if not(j<41)then if 41==j then da[dn[38]]=(not(dm==0));dk=(dk+1);else da[df]=(not da[dm]);end else if(j<40)then local b,q,ba q=df ba=da[(q+2)]b=(da[q]+ba)da[q]=b;if((ba>0))then while(b<=da[q+1])do dk=dm;da[q+3]=b;break end elseif(not(b<da[q+1]))then dk=dm;do da[(q+3)]=b;end end else da[df]=(da[dm]-da[di]);end end end end else if not(j>34)then do if not(j<33)then if(dn[130]>33)then do da[df]=(da[dn[30]]+cz[di]);end else local b,q,ba,dc,dd dc=dn[38]b=di q=(dc+2)do ba={da[dc](da[dc+1],da[q])}end for de=1,b do da[(q+de)]=ba[de]end dd=da[(dc+3)]if dd then da[q]=dd else dk=dm;end;end else if 31==j then local b,q,ba,dc do ba=df end dc=((di-1)*50)b=da[ba]q=(cw-ba)for dd=1,q do b[(dc+dd)]=da[(ba+dd)]end;else da[dn[38]]=cl(db[dm],nil,cy);end end end else if not(j>36)then if(j<36)then da[df]=(da[dm]+da[dn[154]]);else do da[df]=da[dm][da[di]];end end else if(j>37)then local b,q,ba do ba=df end do q=da[ba]end b=(cw-ba)for db=1,b do q[db]=da[(ba+db)]end;else local b b=df da[b](da[(b+1)])end end end end else if not(dn[130]<55)then do if not(dn[130]<59)then if not(j>60)then if(j>59)then da[df]=cy[cz[dn[30]]];else da[dn[38]][cz[dm]]=da[di];end else if 61==dn[130]then local b,q,ba ba=df b={da[ba](da[ba+1])}q=l for l=ba,di do q=(q+1);do da[l]=b[q];end end else local b b=df do da[b](bw(da,(b+1),dm))end end end else if not(j>56)then if(j<56)then da[df]=da[dm][cz[di]];else while((da[df]~=da[di]))do dk=dm;break end end else if(j>57)then local b b=df do da[b]=da[b](da[b+1]);end else local b b=df da[b]=da[b]();end end end end else if not(j>bf)then if not(dn[130]<49)then do if not(j~=49)then do da[df][da[dm]]=da[di];end else if(not(da[dn[38]]~=cz[di]))then dk=dm;end;end end else do if(j<48)then da[dn[38]]=(da[dm]/cz[di]);else da[df]=(da[dm]%cz[di]);end end end else do if not(j>52)then if(j<52)then if(not(da[df]>da[di]))then dk=dm;end;else da[df]=nil;end else if(j<54)then local b b=dn[38]da[b]=da[b](bw(da,b+1,cw));else da[df]();end end end end end end else if not(j<15)then do if not(j<23)then if not(j>26)then do if not(j>24)then if(j<24)then if((da[df]<da[dn[154]]))then do dk=dm;end end;else da[df]={};end else do if(j>25)then da[df]=cz[dn[30]]else if((cz[dn[38]]<da[di]))then dk=dm;end;end end end end else if not(dn[130]>28)then if(j<28)then da[df][cz[dm]]=cz[dn[154]];else if(not(da[df]==cz[di]))then dk=dn[30];end;end else do if(j>29)then local b,l,q,ba b=df q,l=bq(da[b](da[(b+1)]))cw=(l+b-x)do ba=0 end do for l=b,cw do do ba=(ba+1);end da[l]=q[ba];end;end else do do return da[df]end end end end end end else if not(j>18)then if not(j>16)then if(j<a)then da[df]=(da[dm]/da[di]);else local a,b,l l=df a=da[l]b=da[(l+2)]do if((b>0))then do if((a>da[l+1]))then dk=dm;else da[(l+3)]=a;end end elseif((a<da[l+1]))then dk=dm;else do da[(l+3)]=a;end end end end else if(j>17)then local a,b,l l=df b={da[l](bw(da,l+1,cw))}a=0 for q=l,dn[154]do a=(a+1);da[q]=b[a];end elseif(not(da[dn[38]]~=da[di]))then do dk=dn[30];end end end else if not(j<21)then do if(j>21)then da[df]=(0~=dm);else local a,b a=df b={}do if(#dh>0)then for l=1,#dh do local q q=dh[l]for l=0,#q do local x,ba,bf bf=q[l]do ba=bf[1]end do x=bf[2]end if(ba==da and x>=g)then b[x]=ba[x]bf[1]=b end end end end end return da[a],da[(a+1)]end end else do if(j<20)then da[df]=(da[dm]*da[dn[154]]);else do if da[di]then do da[df]=da[di];end dk=dm;end;end end end end end end end else if not(j>f)then if not(dn[130]<3)then if not(j>4)then if 3==j then local a,b,f f=df a=da[f]b=dm for g=1,b do a[g]=da[(f+g)]end;else local a a={}if(#dh>0)then for b=1,#dh do local f do f=dh[b]end for b=0,#f do local g,l,q q=f[b]do g=q[v]end l=q[2]if(g==da and l>=bg)then a[l]=g[l]q[1]=a end end end end return t,dn[dl],da[(df+1)];end else if(j<6)then da[df]=#da[dn[30]];else do cz=cf[df](cz)end end end else if not(j>0)then if da[df]then dk=dn[30];end;else if(j<2)then if not da[df]then do dk=dn[30];end end;else do cx[dm]=da[dn[38]];end end end end else if not(j<11)then if not(j>12)then if 11==dn[130]then local a,b b=dn[38]a=da[dm]do da[(b+1)]=a;end da[b]=a[cz[di]];else local a,b a=dm b=da[a]do for f=(a+1),dn[154]do b=(b..da[f]);end;end da[df]=b;end else if(j<14)then local a,b,f,g a=df f,b=bq(da[a](bw(da,(a+1),dm)))cw=(b+a-1)g=0 for b=a,cw do g=(g+1);do da[b]=f[g];end end;else da[df]=cx[dm];end end else do if not(dn[130]<9)then do if(j>9)then do da[df]=(da[dm]*cz[di]);end elseif(not(da[dn[38]]<da[di]))then dk=dm;end end else if(dn[130]<8)then local a a=df da[a]=da[a](bw(da,a+1,dn[30]));else if((da[df]<cz[dn[154]]))then dk=dn[30];end;end end end end end end end do dk=(dk+1);end end;end;end else if bi<1380 then bi=1388 return cl(bj(bk()),{},bk())();else bh=76;end end else if bi<=1229 then bj=function(a,b,b,b)local b,f,g,j,l,q,t,v=47,49,12,92,61,90,90,17,46,81,62,15,81,10,43,83,15,70,24,43,37,81,97,68 while b~=37 do if f<=240 then if f>=171 then if f>=210 then if f<232 then do for x=1,br()do l[x-m]=bj();end end f=240 else do q[180]=l;end f=255 end else if f>180 then f=210 for m=(#cd+1),(#cd+t)do local x,ba,bf,bg,bh=65,56,93,28,66,61,16,96,60,40,26,11,12,46,93,83,77,62,67,66,64,32,67 while x~=51 do if ba>=304 then if ba<=392 then if ba<=323 then if ba<320 then bh[38]=ck(bg,3,11);ba=323 else ba=347 bh[169]=ck(bg,12,20);end else if ba>354 then ba=434 do bh[30]=ck(bf,12,be);end else ba=392 bh[154]=ck(bg,21,w);end end else if ba<=454 then if ba<450 then bh[141]=-bh[38]ba=454 else bh[bd]=-bh[154]ba=476 end else if ba<508 then ba=515 cd[m]=bh;else x=51;end end end else if ba>=155 then if ba<=194 then if ba<188 then do bf=br()end ba=194 else ba=228 do bh[172]=cu();end end else if ba<251 then ba=257 bh[91]=ck(bg,1,2);else do bh[130]=ck(bf,s,11);end ba=304 end end else if ba>=117 then if ba>121 then do bg=br()end ba=155 else bh[42]=cu();ba=134 end else if ba>65 then bh={}ba=117 else ba=93 bf,bg,bh=nil end end end end end end else t=br()f=189 end end else if f<=92 then if f<86 then f=92 g,j,l,q,t,v=nil else f=110 do v={}end end else if f>116 then do q={}end f=171 else f=145 l={}end end end else if f<=367 then if f<=302 then if f>261 then f=330 g={}else j=br()f=302 end else if f<359 then f=367 for l=1,j do local j,m,s,t=54,54,88,72,20,77,74,24,99,44,89,95 while j~=27 do if m<=126 then if m>=81 then if m<121 then m=126 t=cu()else s=nil m=158 end else s,t=nil m=81 end else if m>=200 then if m<230 then m=237 g[l]=s;else j=27;end else m=200 if(not(t~=3))then s=(0~=cu());elseif(not(t~=1))then s=co();elseif(2==t)then s=by();elseif(not(t~=4))then s=a[by()];end;end end end end else q[39]=g f=412 end end else if f<=437 then if f>421 then do for a=1,br()do local g,j,l,m,s,t=87,53,23,64,86,82,92,90,56,34,28,45,47,62,83,16,55,37,28,82,19,81,26,27,37 while g~=53 do if j<=303 then if j>=185 then if j<=234 then if j<232 then j=234 if not(cu()~=h)then for g=1,cu()do l[192][g]={cu()==0,br()}end end else s=br()j=259 end else if j>=281 then if j>285 then l[91]=t j=326 else j=303 t=ck(s,1,2)end else j=281 m=br()end end else if j<=91 then if j>55 then j=135 l={{},nil,nil}else l,m,s,t=nil j=91 end else if j<159 then l[bb]=cu();j=167 else j=185 l[192]={};end end end else if j>=445 then if j>=517 then if j<=517 then j=555 l[133]=-l[154]else if j>560 then break else j=583 v[a]=l;end end else if j>453 then j=517 do l[141]=-l[38]end else j=485 l[172]=ck(s,12,20);end end else if j<=372 then if j<367 then do l[130]=ck(m,1,11);end j=372 else j=400 do l[38]=ck(s,3,11);end end else if j<413 then do l[30]=ck(m,12,33);end j=422 else do l[154]=ck(s,21,29);end j=445 end end end end end end end f=452 else q[z]=cu();f=437 end else if f<=452 then q[18]=v;f=490 else if f<532 then f=539 do return q;end else b=37;end end end end end end end bi=1266 else if bi>1274 then bi=1324 cn={}else cf={}bi=1284 end end end else if bi<=1099 then if bi<1097 then bi=1099 bt=function()local a,b a,b=cm(cc,bs,(bs+2))bs=(bs+2);return((b*256)+a);end else bi=1131 co=function()local a,b,f,g,h,j,l,m=68,55,96,80,95,32,97,30,14,34,97,15,91,94,99,53,29,38 while a~=36 do if b<=177 then if b<=86 then if b>58 then b=112 f=br()else b=86 f,g,h,j,l,m=nil end else if b<=112 then b=152 g=br()else if b<174 then b=177 do if((f==0 and g==0))then return 0 end end else l=((-1)^bp(31,g,1))b=209 end end end else if b>=302 then if b>=320 then if b<364 then b=368 do return(l*(2^(m-1023))*(h/cp+j))end else break end else b=320 if not(m~=0)then if 0~=h then m=d j=0 else do return(l*0)end end elseif not(m==2047)then else if 0==h then do return(l*(0/0))end else return(l*(1/0))end end end else if b<=209 then b=258 do m=bp(20,g,11)end else if b>262 then b=302 do j=1 end else h=(bp(0,g,20)*4294967296+f)b=285 end end end end end end end else if bi<=1131 then bi=1160 by=function(a,a,a)local a,b,d,f=83,41,52,87,47,33,85,82,52,69,27,39,37,17 while a~=39 do if b>=124 then if b<=124 then b=152 bs=(bs+f);else if b<160 then b=168 return d;else a=39;end end else if b>=58 then if b>62 then b=124 d=cc:sub(bs,(bs+f-p))else f=br()b=84 end else b=58 d,f=nil end end end end else if bi>1164 then cd={}bi=1229 else bi=1183 bq=function(...)return{...},bv('#',...)end end end end end end else if bi>=411 then if bi>=542 then if bi<=627 then if bi>=581 then if bi<623 then bn=tonumber bi=627 else bi=668 ch={}end else bi=581 bw=(unpack or table.unpack)end else if bi<=668 then for a=0,255 do do ch[a]=cs(a);end end bi=688 else if bi<715 then cc=cvfunction(a,b,b)return ch[bn(a,16)]end)bi=722 else do ci={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,y,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,c,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,o,11,},{5,u,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,r,},{7,6,5,4,k,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,i,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,n,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,bc,},{15,14,13,12,11,e,9,8,7,6,5,4,3,2,1,0,},nil,nil}end bi=757 end end end else if bi<=434 then if bi<430 then bv=select bi=434 else ct=type bi=449 end else if bi<=449 then do cr=(function(a,b,b)if not(ct(a)~='number')then return true else return false end end)end bi=474 else if bi<493 then bi=499 cg=math.abs else bi=542 bx=math.floor end end end end else if bi>=250 then if bi>=318 then if bi>=345 then if bi<385 then bi=394 do bk=(getfenv or function()return _ENV end)end else do cj=setmetatable end bi=411 end else bi=345 do bl=math.ldexp end end else if bi>=270 then if bi<286 then bm=table.concat bi=292 else bi=318 cb=table.insert end else ca=string.rep bi=270 end end else if bi>=173 then if bi>=192 then if bi<214 then ce=string.sub bi=220 else cv=string.gsub bi=250 end else cs=string.char bi=192 end else if bi>97 then bi=173 cm=string.byte else bi=131 bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil end end end end end end end)(16,130,8,1,10,6,0,1,14,true,3,0,1,12,10,1,30,9,1,false,4,1,29,1,4,151,192,42,1,133,33,50,0)
